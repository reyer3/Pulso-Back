# üöÄ Environment Variables for Pulso-Back Production
# Copy this file to .env and configure for your environment

# ============================================
# üêò POSTGRESQL DATABASE CONFIGURATION
# ============================================

# Database connection details
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=pulso_db
POSTGRES_USER=pulso_sa
POSTGRES_PASSWORD=your_secure_password_here

# SSL configuration
# Use "require" for production, "disable" for development
POSTGRES_SSLMODE=require

# Connection pooling and timeouts
POSTGRES_MAX_CONNECTIONS=20
POSTGRES_CONNECTION_TIMEOUT=30

# ============================================
# üîß ETL CONFIGURATION
# ============================================

# BigQuery settings
BIGQUERY_PROJECT_ID=mibot-222814
BIGQUERY_DATASET=BI_USA
BIGQUERY_CREDENTIALS_PATH=/path/to/service-account.json

# ETL batch sizes
ETL_DEFAULT_BATCH_SIZE=10000
ETL_MAX_BATCH_SIZE=100000

# ETL timeouts (in seconds)
ETL_QUERY_TIMEOUT=300
ETL_EXTRACTION_TIMEOUT=1800

# ============================================
# üåê WEB APPLICATION CONFIGURATION  
# ============================================

# FastAPI settings
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4

# CORS settings for frontend
CORS_ORIGINS=["http://localhost:3000","https://yourdomain.com"]

# Security
SECRET_KEY=your_super_secret_key_here_change_this_in_production
API_V1_STR=/api/v1

# ============================================
# üìä REDIS CACHE CONFIGURATION
# ============================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here
REDIS_DB=0
REDIS_TTL=3600

# ============================================
# üìù LOGGING CONFIGURATION
# ============================================

# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/pulso-back/app.log

# ============================================
# üê≥ DOCKER & DEPLOYMENT CONFIGURATION
# ============================================

# Environment identifier
ENVIRONMENT=production
APP_NAME=pulso-back
APP_VERSION=1.0.0

# Health check endpoints
HEALTH_CHECK_TIMEOUT=30

# ============================================
# üìà MONITORING & OBSERVABILITY
# ============================================

# Prometheus metrics
ENABLE_METRICS=true
METRICS_PORT=9090

# Sentry error tracking (optional)
SENTRY_DSN=https://your-sentry-dsn-here

# ============================================
# üîí SECURITY CONFIGURATION
# ============================================

# JWT settings
JWT_SECRET_KEY=your_jwt_secret_here
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Rate limiting
RATE_LIMIT_PER_MINUTE=100

# ============================================
# üìß EXAMPLE CONFIGURATIONS BY ENVIRONMENT
# ============================================

# üè† DEVELOPMENT EXAMPLE:
# POSTGRES_HOST=localhost
# POSTGRES_PASSWORD=dev_password
# POSTGRES_SSLMODE=disable
# LOG_LEVEL=DEBUG
# ENVIRONMENT=development

# üè¢ STAGING EXAMPLE:
# POSTGRES_HOST=staging-db.company.com
# POSTGRES_PASSWORD=staging_secure_password
# POSTGRES_SSLMODE=require
# LOG_LEVEL=INFO
# ENVIRONMENT=staging

# üöÄ PRODUCTION EXAMPLE:
# POSTGRES_HOST=prod-db.company.com
# POSTGRES_PASSWORD=ultra_secure_production_password
# POSTGRES_SSLMODE=require
# LOG_LEVEL=WARNING
# ENVIRONMENT=production
# ENABLE_METRICS=true

# ============================================
# üê≥ DOCKER COMPOSE USAGE
# ============================================
#
# 1. Copy this file to .env:
#    cp .env.production.example .env
#
# 2. Edit values for your environment:
#    vim .env
#
# 3. Run with docker-compose:
#    docker-compose up -d
#
# 4. Run migrations:
#    docker-compose exec app yoyo apply
#
# 5. Run ETL:
#    docker-compose exec app python etl/simple_incremental_etl.py
#
# ============================================

# ============================================
# üîê SECURITY NOTES
# ============================================
#
# üö® IMPORTANT:
# - Never commit .env files to version control
# - Use strong passwords in production
# - Enable SSL/TLS for all connections
# - Rotate credentials regularly
# - Use secrets management in production (K8s secrets, AWS Secrets Manager, etc.)
#
# üìã CHECKLIST:
# ‚úÖ Database password is strong and unique
# ‚úÖ Secret keys are randomly generated
# ‚úÖ SSL is enabled for production
# ‚úÖ Log level is appropriate for environment
# ‚úÖ CORS origins are correctly configured
# ‚úÖ Rate limiting is enabled
#
# ============================================
