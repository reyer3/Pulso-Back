# ========================================
# yoyo-migrations configuration
# TimescaleDB optimized version
# ========================================

[DEFAULT]
# Directory containing migration files
sources = migrations

# Database connection URL - SSL disabled for development
# NOTE: TimescaleDB requires PostgreSQL 12+ with TimescaleDB extension
database = postgresql://pulso_sa:ghTWOmIsMIsp@localhost:5432/pulso_db

# Migration behavior
batch_mode = off
verbosity = 1

# Connection settings for stability with TimescaleDB
post_connect_hooks = 
    SET statement_timeout = '30min';
    SET idle_in_transaction_session_timeout = '10min';
    CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;

# ========================================
# MIGRATION CHANGES - June 29, 2025:
#
# Converted Python migrations to SQL for TimescaleDB optimization:
# - 010-create-raw-calendario-table.py    → 011-create-raw-calendario-table.sql
# - 011-create-raw-asignaciones-table.py  → 012-create-raw-asignaciones-table.sql  
# - 012-create-raw-trandeuda-table.py     → 013-create-raw-trandeuda-table.sql
# - 013-create-raw-pagos-table.py         → 014-create-raw-pagos-table.sql
# - 014-create-gestiones-unificadas-table.py → 015-create-gestiones-unificadas-table.sql
#
# TimescaleDB Optimizations Added:
# ✅ Hypertables for time-series data
# ✅ Optimized indexes for temporal queries  
# ✅ Chunk partitioning by month
# ✅ Constraints for data quality
# ✅ Comments for documentation
# ========================================

# ========================================
# Usage Commands:
# 
# Apply all pending migrations:
#   yoyo apply
#
# Apply migrations with specific database URL:
#   yoyo apply --database "postgresql://user:pass@host:port/db?sslmode=disable"
#
# Create new migration:
#   yoyo new "Add dashboard tables" --sql
#
# Show migration status:
#   yoyo list
#
# Rollback last migration:
#   yoyo rollback
#
# Mark migration as applied without running:
#   yoyo mark
#
# ========================================
# TimescaleDB Specific Commands:
#
# Check hypertables:
#   SELECT * FROM timescaledb_information.hypertables;
#
# Check chunks:
#   SELECT * FROM timescaledb_information.chunks;
#
# Optimize query performance:
#   SELECT * FROM timescaledb_information.continuous_aggregates;
# ========================================
